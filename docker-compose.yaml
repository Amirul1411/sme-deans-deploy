version: '3'

networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
  notification_network:
    driver: bridge
  # frontend_network:
  #   driver: bridge


services:
  db:
    image: postgres
    ports:
      - "5432:5432"
    env_file:
      - default.env
    networks: 
      - db_network
  web:
    build:
      context: ./deans-api
    image: django_image
    entrypoint: "start_django.sh"
    env_file:
      - default.env
    volumes:
      - ./deans-api/data:/data
      - ./deans-api/deans_api:/work/deans-api/deans_api
      - static_volume:/static-django
    depends_on:
      - db
    networks: 
      - db_network
      - nginx_network
      - notification_network
  notification:
    build:
      context: ./deans-notification
    image: notification_image
    entrypoint: "start_server.sh"
    # command: "python -c \"while True: pass\""
    # ports:
    #   - "8000:3000"
    env_file:
      - default.env
    volumes:
      - ./deans-notification:/work
    networks:
      - notification_network
  # frontend:
  #   build:
  #     context: ./deans-frontend
  #   image: frontend_image
  #   networks:
  #     - frontend_network
  #   ports:
  #     - 3000:3000
  nginx:
    build:
      context: ./nginx
    image: nginx:1.13
    ports:
      - 8000:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/static-django
    env_file:
      - default.env
    depends_on:
      - web
      # - frontend
      # - node
    networks:
      - nginx_network
  # cron:
  #   image: django_image
  #   command: bash -c "python3 /cron/cron.py"
  #   env_file:
  #     - default.env
  #   volumes:
  #     - ./cron:/cron
  #     - ./deans-api/deans_api:/work/deans-api/deans_api
  #   depends_on:
  #     - web
  #   networks:
  #     - notification_network
  #     - db_network

volumes:
  static_volume:




      # node:
  #   build: ./deans-frontend
  #   ports:
  #   - "3000:3000"
  #   expose:
  #     - 3000
  #   volumes:
  #    - ./deans-frontend:/work/
  #   ports:
  #     - "3000"
  #   command: bash -c "yarn install; yarn start"
  #   networks: 
  #     - nginx_network